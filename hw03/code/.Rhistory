df <- data.frame(first, last, gender, born,spell)
df
df[c(TRUE,FALSE,TRUE,FALSE),]
df[c(1,0,1,0),]
df[,4]
c(TRUE,FALSE,TRUE,FALSE)
df[c(TRUE,TRUE,FALSE,FALSE),]
df[df$born == 1980]
df[df$born == 1980]
df[df$born == 1980,]
df[df[,4],]
df[df[,4]==1980,]
df[,]
df[1,]
df[,1]
df[1,4]
df[1:3,1:2]
df[,df$born == 1980]
df[,c('spell','born')]
df[,c('spell','first')]
name <- c("Anakin","Padme","Luke","Leia")
height <- c(1.88,1.65,1.72,1.50)
weight <- c(84,45,77,49)
sw <- data.frame(name, gender, height, weight)
filter(sw, gender == 'female')
select(sw, gender == 'female')
filter(sw, gender == female)
sw
select(sw, gender)
sw$gender
library(dplyr)
filter(sw, gender == 'female')
select(sw, gender)
select(sw, gender == 'female')
filter(sw, gender == female)
filter(sw, gender == 'female')
sw %>% filter(gender == 'male')
sw %>% select(name, height) %>% arrange(height)
sw %>% select(name, height) %>% arrange(desc(height)
sw %>% select(name, height) %>% arrange(desc(height)
)
sw %>% select(name, height) %>% arrange(desc(height))
sw %>% select(height) %>% summarise(mu_height = mean(height))
sw %>% select(height) %>% summarise(avg_height = mean(height))
?summarise
sw %>% select(gender,weight) %>% group_by(gender) %>% summarise(avg_mean = mean(weight))
sw %>% select(gender,weight) %>% group_by(gender) %>% summarise(avg_mean = mean(weight)) %>% arrange(weight)
x <- c(1,3,4,TRUE)
mode(x)
typeof(x)
x <- c(1,2,3,4)
typeof(x)
y <- c(1,3,4,"four","five")
mode(y)
x <- c(1,3,4,TRUE)
y <- c(x,1,3,4,"four","five")
mode(y)
x
x[c(TRUE, FALSE)]
x[c(TRUE, FALSE,FALSE)]
x[c(TRUE, FALSE,FALSE,FALSE)]
x[c(TRUE,FALSE, FALSE,FALSE,FALSE)]
x[c(FALSE, FALSE,FALSE,FALSE)]
X[X>1]
x
x[x>1]
x[TRUE]
x[as.logical(c(0,1,pi,-10))]
y <- factor(y)
y
y <- as.integer(y)
mode(y)
lst <- list(c(1,2,3),matrix(1:9, nrow = 3, ncol =3), list(1:2, c(TRUE, FALSE),c("a","b")))
lst[1]
lst[1][1]
lst[2]
lst[3]
lst[[2]][3,4]
lst[[2]][1:3,]
lst[[2]]
lst[[2]][3,2]
lst[[2]][3,]
f <- function(x){
x^2
}
g <- function(x){
2*x+5
}
f(2)
f(-5)
g(0)
g(-5/2)
?circ
?\circ
pythagoras <- function(a,b){
sqrt(a^2+b^2)
}
pythagoras(3,4)
f <- function(x){
x^2
}
g <- function(x){
2*x+5
}
fog <- function(x){\circ g(x)}
fog <- function(x){g(x)}
gof <- function(x){g(x)}
fog(2)
fog(-5)
gof(0)
gof(-5/2)
pythagoras <- function(a,b){
sqrt(a^2+b^2)
}
pythagoras(3,4)
miles2kms <- function(x) {
x*1.6
}
x*3.78541
gallon2liters <- function(x){
x*3.78541
}
liters2gallons <- function(x){
x/3.78541
}
liters2gallons(1)
x <- c(1:10,seq(10,100, by = 10))
table <- data.frame(liters = x, gallons = liters2gallons(x))
table
seconds2years <- function(x){
x/(365*24*60*60)
}
seconds2years(1000000000)
?gaussian
1/(s*sqrt(2*pi))*exp(-.5*((x-m)/s)^2)
gaussian <- function(m,s,x){
1/(s*sqrt(2*pi))*exp(-.5*((x-m)/s)^2)
}
gaussian(0,2,1)
dnorm(x = 1, mean = 0, sd = 2)
plot(gaussian(0,2,seq(-4.5,4.5,by=0.1)))
poly1 <- function(x) {
(x^2) * (x - 1)
}
x <- seq(-4, 4, length.out = 20)
y <- poly1(x)
plot(x, y, type = 'l', lwd = 3, col = "#FB7215", las = 1)
abline(h = 0, v = 0, col = '#888888aa', lwd = 1.5)
title(main = expression(paste(f(x), ' = ', x^2, (x - 1))))
plot(x, y, type = 'l', lwd = 3, col = "#FB7215", las = 1)
??first quartitle
combinations <- function(n,k){
factorial(n)/(factorial(k)*factorial(n-k))
}
combinations(n = 5, k = 2)
binom_prob <- function(n,k,prob){
combinations(n,k)*prob^k*(1-prob)^(n-k)
}
binom_prob(n = 5, k = 2, prob = 0.5)
binom_prob(5,3,.35)
binom_prob(10,3,1/6)
new <- data.frame(color = c("blue","blakc","blue","blue","black"),value = 1:5)
new
filter(new, color == "blue")
new
filter(new, color == "blue")
library(dplyr)
filter(new, color == "blue")
filter(new, value %>% c(1,4))
new %>% filter(color == "blue")
filter(new, value %in% c(1,4))
?%in%
?"%in%"
new <- data.frame(color = c("blue","blakc","blue","blue","black","red","red"),value = 1:7)
new <- data.frame(color = c("blue","blakc","blue","blue","black","red","red"),value = 1:7)
new
new %>% summarise(total = sum(value)) %>% group_by(color)
new %>% group_by(color) %>% summarise(total = sum(value))
new <- data.frame(color = c("blue","black","blue","blue","black","red","red"),value = 1:7)
new
new %>% group_by(color) %>% summarise(total = sum(value))
library(ggplot2)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
download.file(url = paste0(github, csv), destfile = 'nba2017-players.csv')
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
csv <- "data/nba2017-players.csv"
download.file(url = paste0(github, csv), destfile = 'nba2017-players.csv')
library(readr)
library(dplyr)
dat <- read.csv('nba2017-players.csv', stringsAsFactors = FALSE)
slice(dat, 1:3)
filter(dat, height >85)
mutate(gsw, height/weight)
mutate(dat, height/weight)
arrange(dat, height)
dat %>% summarise(avg_salary = mean(salary))
new %>% summarise(total = sum(value)) %>% group_by(color)
new %>% group_by(color) %>% summarise(total = sum(va
new %>% group_by(color) %>% summarise(total = sum(value))
new <- data.frame(color = c("blue","black","blue","blue","black","red","red"),value = 1:7)
new
new %>% group_by(color) %>% summarise(total = sum(value))
first <- c("Harry","Hemione","Ron", "Luna")
last <- c("Potter","Granger","Weasley","Lovegood")
gender <- c("male","female","male","female")
born <- c(1980,1979,1980,1981)
spell <- c("sectumsempra","alohomora","riddikulus","episkey")
df <- data.frame(first, last, gender, born,spell)
df
df[c(TRUE,FALSE,TRUE,FALSE),]
df[c(1,0,1,0),]
df[,4]
df[c(TRUE,TRUE,FALSE,FALSE),]
df[,4]
df[,df$born]
read.delim('nba2017-players.csv')
.is <- 3
.is
?read.table
df <- data.frame(first, last, gender, born,spell)
df
df %>% group_by(gender) %>% count()
df %>% select(gender %>% count()
.is <- 3
df %>% select(gender) %>% count()
download.file(url = paste0(github, csv), destfile = 'nba2017-players.csv')
csv <- "data/nba2017-stats.csv"
csv <- "data/nba2017-stats.csv"
download.file(url = paste0(github, csv), destfile = 'nba2017-players.csv')
download.file(url = paste0(github, csv), destfile = 'nba2017-teams.csv')
download.file(url = paste0(github, csv), destfile = 'nba2017-roster.csv')
download.file(url = paste0(github, csv), destfile = 'nba2017-stats.csv')
sink(file = "efficiency-summary.txt", "../output/efficiency-summary.txt")
sink(file = "efficiency-summary.txt","../output/efficiency-summary.txt")
sink(file = "efficiency-summary.txt"),"../output/efficiency-summary.txt")
sink(file = "efficiency-summary.txt")
summary(efficiency)
library(dplyr)
setwd("c:/Users/Gun Yeup Kim/stat133/stat133-hws-fall17/hw03/code")
roster <- read.csv("../data/nba2017-roster.csv",stringsAsFactors = FALSE)
missed_fg <- roster$field_goals_atts - roster$field_goals_made
missed_ft <- roster$points1_atts - roster$points1_made
points <- roster$points3_made*3+roster$points2_made*2+roster$points1_made
rebounds <- roster$off_rebounds+roster$def_rebounds
roster <- roster %>% mutate(missed_fg,missed_ft,points,rebounds)
efficiency <- (roster$points +roster$rebounds+roster$assists+roster$steals+roster$blocks-roster$missed_fg-roster$missed_ft-roster$turnovers)/roster$games_played
summary(efficiency)
sink("../output/efficiency-summary.txt")
sink(file = "../output/efficiency-summary.txt")
summary(efficiency)
?merge
stat <- read.csv("../data/nba2017-stats.csv",stringsAsFactors = FALSE)
merge_roster_stat <- merge(roster,stat)
View(merge_roster_stat)
View(merge_roster_stat)
View(stat)
View(stat)
View(roster)
View(roster)
roster <- roster %>% mutate(efficiency)
merge_roster_stat <- merge(roster,stat)
View(merge_roster_stat)
View(merge_roster_stat)
View(stat)
View(stat)
download.file(url = paste0(github, csv), destfile = 'nba2017-roster.csv')
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
csv <- "data/nba2017-roster.csv"
download.file(url = paste0(github, csv), destfile = 'nba2017-roster.csv')
csv <- "data/nba2017-stats.csv"
download.file(url = paste0(github, csv), destfile = 'nba2017-stats.csv')
roster <- read.csv("../data/nba2017-roster.csv",stringsAsFactors = FALSE)
stat <- read.csv("../data/nba2017-stats.csv",stringsAsFactors = FALSE)
missed_fg <- roster$field_goals_atts - roster$field_goals_made
missed_fg <- stat$field_goals_atts - stat$field_goals_made
missed_ft <- stat$points1_atts - stat$points1_made
points <- stat$points3_made*3+stat$points2_made*2+stat$points1_made
rebounds <- stat$off_rebounds+stat$def_rebounds
stat <- stat %>% mutate(missed_fg,missed_ft,points,rebounds)
efficiency <- (stat$points +stat$rebounds+stat$assists+stat$steals+stat$blocks-stat$missed_fg-stat$missed_ft-stat$turnovers)/stat$games_played
stat <- stat %>% mutate(efficiency)
sink(file = "../output/efficiency-summary.txt")
summary(efficiency)
merge_roster_stat <- merge(stat,roster)
View(merge_roster_stat)
View(merge_roster_stat)
teams <- data.frame(team = merge_roster_stat$team,experience = merge_roster_stat$experience,salary = merge_roster_stat$salary,points3 = merge_roster_stat$points3_made, points2 = merge_roster_stat$points2_made, free_throws = merge_roster_stat$points1_made, points = merge_roster_stat$points, off_rebounds = merge_roster_stat$off_rebounds, def_rebounds = merge_roster_stat$def_rebounds, assists = merge_roster_stat$assists, steals = merge_roster_stat$steals, blocks = merge_roster_stat$blocks, tunrovers = merge_roster_stat$turnovers, fouls = merge_roster_stat$fouls, efficiency = merge_roster_stat$efficiency)
View(teams)
View(teams)
View(merge_roster_stat)
View(merge_roster_stat)
summary(teams)
summary(teams)
sumari <- summary(teams)
sumari
sink(file = "../data/teams-summary.txt")
summary(team)
summary(teams)
sink(file = "../data/teams-summary.txt")
summary(teams)
View(teams)
View(teams)
team <- teams %>% group_by(team)
View(team)
View(team)
team1 <- teams %>% group_by(team)
View(team1)
View(team1)
team1 <- teams %>% arrange(team)
View(team1)
View(team1)
team1 <- teams %>% group_by(team) %>% count()
View(team1)
View(team1)
summary(team1)
View(team1)
View(team1)
team1 <- teams %>% arrange(team)
experience <- teams %>% group_by(team) %>% summarise(sum(experience))
View(experience)
View(experience)
experience <- teams %>% group_by(team) %>% summarise(round(sum(experience)))
View(experience)
experience <- teams %>% group_by(team) %>% summarise(round(sum(experience)))
View(experience)
View(experience)
experience <- teams %>% group_by(team) %>% summarise(round(sum(experience), digits = 2))
View(experience)
View(experience)
experience1 <- teams %>% group_by(team) %>% summarise(round(sum(experience), digits = 2))
View(experience)
View(experience)
View(experience)
View(experience)
sink(file = "../data/teams-summary.txt")
summary(experience)
experience1 <- teams %>% group_by(team) %>% summarise(experience = round(sum(experience), digits = 2))
sink(file = "../data/teams-summary.txt")
summary(experience)
experience <- teams %>% group_by(team) %>% summarise(experience = round(sum(experience), digits = 2))
sink(file = "../data/teams-summary.txt")
summary(experience)
salary <- teams %>% group_by(team) %>% summarise(salary = round(sum(salary)/1000000,digits =2))
View(salary)
View(salary)
team <- teams %>% group_by(team) %>% count()
View(team)
View(team)
View(experience)
View(experience)
View(experience)
View(salary)
points3 <- teams %>% group_by(team) %>% summarise(sum(points3))
points2 <- teams %>% group_by(team) %>% summarise(sum(points2))
points3 <- teams %>% group_by(team) %>% summarise(points3 = sum(points3))
points2 <- teams %>% group_by(team) %>% summarise(points2 = sum(points2))
free_throws <- stat %>% group_by(team) %>% summarise(free_throws = sum(points1_made))
free_throws <- stat %>% group_by(team) %>% summarise(free_throws = sum(points1_made))
View(stat)
View(stat)
free_throws <- merge_roster_stat %>% group_by(team) %>% summarise(free_throws = sum(points1_made))
View(free_throws)
View(free_throws)
off_rebounds <- teams %>% group_by(team) %>% summarise(off_rebounds = sum(off_rebounds))
def_rebounds <- teams %>% group_by(team) %>% summarise(def_reounds = sum(def_rebounds))
def_rebounds <- teams %>% group_by(team) %>% summarise(def_reounds = sum(def_rebounds))
assists <- teams %>% group_by(team) %>% summarise(assists = sum(assists))
steals <- teams %>% group_by(team) %>% summarise(steals = sum(steals))
blocks <- teams %>% group_by(team) %>% summarise(blocks = sum(blocks))
turnovers <- teams %>% group_by(team) %>% summarise(turnovers = sum(tunrovers))
fouls <- teams %>% group_by(team) %>% summarise(fouls = sum(fouls))
efficiency <- teams %>% group_by(team) %>% summarise(efficiency = sum(efficiency))
View(roster)
View(merge_roster_stat)
points <- merge_roster_stat %>% group_by(team) %>% summarise(points = sum(points))
final_organized_team <- merge(experience,salary,points3,points2,free_throws,points,off_rebounds,def_rebounds,assists,steals,blocks,turnovers,fouls,efficiency)
final_organized_team <- join(experience,salary,points3,points2,free_throws,points,off_rebounds,def_rebounds,assists,steals,blocks,turnovers,fouls,efficiency)
final_organized_team <- merge(experience,salary,points3,points2,free_throws,points,off_rebounds,def_rebounds,assists,steals,blocks,turnovers,fouls,efficiency)
final_organized_team <- merge(experience,salary)
View(final_organized_team)
View(final_organized_team)
final_organized_team <- merge(final_organized_team,points3)
final_organized_team <- merge(final_organized_team,points2)
final_organized_team <- merge(final_organized_team,free_throws)
final_organized_team <- merge(final_organized_team,points)
final_organized_team <- merge(final_organized_team,off_rebounds)
final_organized_team <- merge(final_organized_team,def_rebounds)
final_organized_team <- merge(final_organized_team,assist)
final_organized_team <- merge(final_organized_team,steals)
final_organized_team <- merge(final_organized_team,blocks)
final_organized_team <- merge(final_organized_team,turnovers)
final_organized_team <- merge(final_organized_team,fouls)
final_organized_team <- merge(final_organized_team,efficiency)
View(final_organized_team)
final_organized_team <- merge(final_organized_team,assist)
final_organized_team <- merge(final_organized_team,assists)
summary(final_organized_team)
sink(file = "../data/teams-summary.txt")
summary(final_organized_team)
final_organized_team$team <- as.character(final_organized_team$team)
View(final_organized_team)
View(final_organized_team)
summary(final_organized_team)
typeof(final_organized_team$team)
View(merge_roster_stat)
View(merge_roster_stat)
roster <- read.csv("../data/nba2017-roster.csv",stringsAsFactors = FALSE, colClasses = c(team = "character"))
View(roster)
View(roster)
merge_roster_stat <- merge(stat,roster)
teams <- data.frame(team = merge_roster_stat$team,experience = merge_roster_stat$experience,salary = merge_roster_stat$salary,points3 = merge_roster_stat$points3_made, points2 = merge_roster_stat$points2_made, free_throws = merge_roster_stat$points1_made, points = merge_roster_stat$points, off_rebounds = merge_roster_stat$off_rebounds, def_rebounds = merge_roster_stat$def_rebounds, assists = merge_roster_stat$assists, steals = merge_roster_stat$steals, blocks = merge_roster_stat$blocks, tunrovers = merge_roster_stat$turnovers, fouls = merge_roster_stat$fouls, efficiency = merge_roster_stat$efficiency)
experience <- teams %>% group_by(team) %>% summarise(experience = round(sum(experience), digits = 2))
salary <- teams %>% group_by(team) %>% summarise(salary = round(sum(salary)/1000000,digits =2))
points3 <- teams %>% group_by(team) %>% summarise(points3 = sum(points3))
points2 <- teams %>% group_by(team) %>% summarise(points2 = sum(points2))
free_throws <- merge_roster_stat %>% group_by(team) %>% summarise(free_throws = sum(points1_made))
off_rebounds <- teams %>% group_by(team) %>% summarise(off_rebounds = sum(off_rebounds))
def_rebounds <- teams %>% group_by(team) %>% summarise(def_reounds = sum(def_rebounds))
assists <- teams %>% group_by(team) %>% summarise(assists = sum(assists))
steals <- teams %>% group_by(team) %>% summarise(steals = sum(steals))
blocks <- teams %>% group_by(team) %>% summarise(blocks = sum(blocks))
turnovers <- teams %>% group_by(team) %>% summarise(turnovers = sum(tunrovers))
fouls <- teams %>% group_by(team) %>% summarise(fouls = sum(fouls))
efficiency <- teams %>% group_by(team) %>% summarise(efficiency = sum(efficiency))
points <- merge_roster_stat %>% group_by(team) %>% summarise(points = sum(points))
final_organized_team <- merge(experience,salary)
final_organized_team <- merge(final_organized_team,points3)
final_organized_team <- merge(final_organized_team,points2)
final_organized_team <- merge(final_organized_team,free_throws)
final_organized_team <- merge(final_organized_team,points)
final_organized_team <- merge(final_organized_team,off_rebounds)
final_organized_team <- merge(final_organized_team,def_rebounds)
final_organized_team <- merge(final_organized_team,assists)
final_organized_team <- merge(final_organized_team,steals)
final_organized_team <- merge(final_organized_team,blocks)
final_organized_team <- merge(final_organized_team,turnovers)
final_organized_team <- merge(final_organized_team,fouls)
final_organized_team <- merge(final_organized_team,efficiency)
sink(file = "../data/teams-summary.txt")
summary(final_organized_team)
roster <- read.csv("../data/nba2017-roster.csv",stringsAsFactors = TRUE)
merge_roster_stat <- merge(stat,roster)
teams <- data.frame(team = merge_roster_stat$team,experience = merge_roster_stat$experience,salary = merge_roster_stat$salary,points3 = merge_roster_stat$points3_made, points2 = merge_roster_stat$points2_made, free_throws = merge_roster_stat$points1_made, points = merge_roster_stat$points, off_rebounds = merge_roster_stat$off_rebounds, def_rebounds = merge_roster_stat$def_rebounds, assists = merge_roster_stat$assists, steals = merge_roster_stat$steals, blocks = merge_roster_stat$blocks, tunrovers = merge_roster_stat$turnovers, fouls = merge_roster_stat$fouls, efficiency = merge_roster_stat$efficiency)
experience <- teams %>% group_by(team) %>% summarise(experience = round(sum(experience), digits = 2))
salary <- teams %>% group_by(team) %>% summarise(salary = round(sum(salary)/1000000,digits =2))
points3 <- teams %>% group_by(team) %>% summarise(points3 = sum(points3))
points2 <- teams %>% group_by(team) %>% summarise(points2 = sum(points2))
free_throws <- merge_roster_stat %>% group_by(team) %>% summarise(free_throws = sum(points1_made))
off_rebounds <- teams %>% group_by(team) %>% summarise(off_rebounds = sum(off_rebounds))
def_rebounds <- teams %>% group_by(team) %>% summarise(def_reounds = sum(def_rebounds))
assists <- teams %>% group_by(team) %>% summarise(assists = sum(assists))
steals <- teams %>% group_by(team) %>% summarise(steals = sum(steals))
blocks <- teams %>% group_by(team) %>% summarise(blocks = sum(blocks))
turnovers <- teams %>% group_by(team) %>% summarise(turnovers = sum(tunrovers))
fouls <- teams %>% group_by(team) %>% summarise(fouls = sum(fouls))
efficiency <- teams %>% group_by(team) %>% summarise(efficiency = sum(efficiency))
points <- merge_roster_stat %>% group_by(team) %>% summarise(points = sum(points))
final_organized_team <- merge(experience,salary)
final_organized_team <- merge(final_organized_team,points3)
final_organized_team <- merge(final_organized_team,points2)
final_organized_team <- merge(final_organized_team,free_throws)
final_organized_team <- merge(final_organized_team,points)
final_organized_team <- merge(final_organized_team,off_rebounds)
final_organized_team <- merge(final_organized_team,def_rebounds)
final_organized_team <- merge(final_organized_team,assists)
final_organized_team <- merge(final_organized_team,steals)
final_organized_team <- merge(final_organized_team,blocks)
final_organized_team <- merge(final_organized_team,turnovers)
final_organized_team <- merge(final_organized_team,fouls)
final_organized_team <- merge(final_organized_team,efficiency)
sink(file = "../data/teams-summary.txt")
summary(final_organized_team)
View(team)
View(team)
team <- teams %>% group_by(team)
sink(file = "../data/teams-summary.txt")
typeof(final_organized_team$team)
final_organized_team$team <- as.character(final_organized_team$team)
sink(file = "../data/teams-summary.txt")
typeof(final_organized_team$team)
sink(file = "../data/teams-summary.txt")
summary(final_organized_team$team)
summary(final_organized_team)
sink(file = "../data/teams-summary.txt")
summary(final_organized_team)
write.csv(file = "../data/nba-2017.csv")
write.csv(final_organized_team,file = "../data/nba-2017.csv")
write.csv(final_organized_team,file = "../data/nba2017-teams.csv")
library(ggplot2)
star_plot <- stars(final_organized_team[,-1], labels = final_organized_team$team)
pdf(star_plot, "../images/teams_star_plot.pdf")
View(star_plot)
View(star_plot)
pdf(filename = "../images/teams_star_plot.pdf")
?pdf
pdf(file = "../images/teams_star_plot.pdf")
stars(final_organized_team[,-1], labels = final_organized_team$team)
dev.off()
ggplot(final_organized_team, aes(x = experience, y = salary))+geom_labe(label = team)
ggplot(final_organized_team, aes(x = experience, y = salary))+geom_label(label = team)
ggplot(final_organized_team[,-1], aes(x = experience, y = salary))+geom_label(label = team)
ggplot(final_organized_team[,-1], aes(x = experience, y = salary))+geom_label(label = team[,-1])
ggplot(final_organized_team, aes(x = experience, y = salary))+geom_label(label = final_organized_team$team)
pdf(file = "../images/experience_salary.pdf")
ggplot(final_organized_team, aes(x = experience, y = salary))+geom_label(label = final_organized_team$team)
dev.off()
source('C:/Users/Gun Yeup Kim/stat133/stat133-hws-fall17/hw03/code/make-teams-data.R')
source('C:/Users/Gun Yeup Kim/stat133/stat133-hws-fall17/hw03/code/make-teams-data.R')
source('C:/Users/Gun Yeup Kim/stat133/stat133-hws-fall17/hw03/code/make-teams-data.R')
source('C:/Users/Gun Yeup Kim/stat133/stat133-hws-fall17/hw03/code/make-teams-data.R')
source('C:/Users/Gun Yeup Kim/stat133/stat133-hws-fall17/hw03/code/make-teams-data.R')
